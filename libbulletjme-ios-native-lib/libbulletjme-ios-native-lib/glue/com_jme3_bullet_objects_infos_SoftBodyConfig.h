/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_jme3_bullet_objects_infos_SoftBodyConfig */

#ifndef _Included_com_jme3_bullet_objects_infos_SoftBodyConfig
#define _Included_com_jme3_bullet_objects_infos_SoftBodyConfig
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    copyValues
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_copyValues
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getAeroModel
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getAeroModel
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getAnchorsHardness
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getAnchorsHardness
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getClusterIterations
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getClusterIterations
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getClusterKineticHardness
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getClusterKineticHardness
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getClusterKineticImpulseSplitCoef
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getClusterKineticImpulseSplitCoef
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getClusterRigidHardness
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getClusterRigidHardness
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getClusterRigidImpulseSplitCoef
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getClusterRigidImpulseSplitCoef
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getClusterSoftHardness
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getClusterSoftHardness
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getClusterSoftImpulseSplitCoef
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getClusterSoftImpulseSplitCoef
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getCollisionsFlags
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getCollisionsFlags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getDampingCoef
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getDampingCoef
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getDragCoef
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getDragCoef
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getDriftIterations
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getDriftIterations
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getDynamicFrictionCoef
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getDynamicFrictionCoef
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getKineticContactsHardness
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getKineticContactsHardness
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getLiftCoef
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getLiftCoef
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getMaximumVolumeRatio
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getMaximumVolumeRatio
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getPoseMatchingCoef
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getPoseMatchingCoef
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getPositionIterations
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getPositionIterations
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getPressureCoef
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getPressureCoef
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getRigidContactsHardness
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getRigidContactsHardness
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getSoftContactsHardness
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getSoftContactsHardness
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getTimeScale
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getTimeScale
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getVelocitiesCorrectionFactor
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getVelocitiesCorrectionFactor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getVelocitiesIterations
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getVelocitiesIterations
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    getVolumeConservationCoef
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_getVolumeConservationCoef
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setAeroModel
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setAeroModel
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setAnchorsHardness
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setAnchorsHardness
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setClusterIterations
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setClusterIterations
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setClusterKineticHardness
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setClusterKineticHardness
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setClusterKineticImpulseSplitCoef
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setClusterKineticImpulseSplitCoef
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setClusterRigidHardness
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setClusterRigidHardness
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setClusterRigidImpulseSplitCoef
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setClusterRigidImpulseSplitCoef
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setClusterSoftHardness
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setClusterSoftHardness
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setClusterSoftImpulseSplitCoef
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setClusterSoftImpulseSplitCoef
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setCollisionsFlags
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setCollisionsFlags
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setDampingCoef
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setDampingCoef
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setDragCoef
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setDragCoef
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setDriftIterations
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setDriftIterations
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setDynamicFrictionCoef
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setDynamicFrictionCoef
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setKineticContactsHardness
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setKineticContactsHardness
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setLiftCoef
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setLiftCoef
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setMaximumVolumeRatio
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setMaximumVolumeRatio
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setPoseMatchingCoef
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setPoseMatchingCoef
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setPositionIterations
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setPositionIterations
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setPressureCoef
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setPressureCoef
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setRigidContactsHardness
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setRigidContactsHardness
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setSoftContactsHardness
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setSoftContactsHardness
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setTimeScale
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setTimeScale
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setVelocitiesCorrectionFactor
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setVelocitiesCorrectionFactor
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setVelocitiesIterations
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setVelocitiesIterations
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_jme3_bullet_objects_infos_SoftBodyConfig
 * Method:    setVolumeConservationCoef
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_objects_infos_SoftBodyConfig_setVolumeConservationCoef
  (JNIEnv *, jclass, jlong, jfloat);

#ifdef __cplusplus
}
#endif
#endif
